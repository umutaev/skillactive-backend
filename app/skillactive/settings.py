"""
Django settings for skillactive project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from email.policy import default
from pathlib import Path
from os import environ

from django.core.exceptions import ImproperlyConfigured


def get_env(env_var: str, default=None):
    if default is not None:
        return environ.get(env_var, default)
    try:
        return environ[env_var]
    except KeyError:
        error_msg = f"Set the {env_var} environment variable."
        raise ImproperlyConfigured(error_msg)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

SECRET_KEY = str(get_env("SECRET_KEY"))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(get_env("DEBUG", default=False))

ALLOWED_HOSTS = [
    ".skillactive.ru",
    "*"
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "feed",
    "users",
    "comments",
    "clubs",
    "applications",
    "categories",
    "drf_spectacular",
    "corsheaders",
    "districts",
    "organizations",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "skillactive.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

STATIC_ROOT = BASE_DIR / "static/"

MEDIA_ROOT = BASE_DIR / "media/"
MEDIA_URL = "media/"

WSGI_APPLICATION = "skillactive.wsgi.application"


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",  # <-- And here
    ],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}


SPECTACULAR_SETTINGS = {
    "TITLE": "Skillactive Backend",
    "VERSION": "0.0.1",
    "SWAGGER_UI_SETTINGS": {
        "displayRequestDuration": True,
        "requestSnippets": ["curl_bash"],
    },
}


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": get_env("DBNAME"),
        "USER": get_env("DBUSER"),
        "PASSWORD": get_env("DBPASS"),
        "HOST": get_env("DBHOST"),
        "PORT": int(get_env("DBPORT")),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# EMAIL
EMAIL_HOST = get_env("EMAIL_HOST", default="smtp.mail.ru")
EMAIL_HOST_PASSWORD = get_env("EMAIL_HOST_PASSWORD")
EMAIL_HOST_USER = get_env("EMAIL_HOST_USER")
EMAIL_PORT = "465"
DEFAULT_FROM_EMAIL = f"Skillactive <{EMAIL_HOST_USER}>"
EMAIL_USE_SSL = True
EMAIL_TIMEOUT = 10

HOST_VARIABLE = "http://127.0.0.1:8000/"

# CORS
CORS_ALLOW_ALL_ORIGINS = bool(get_env("CORS_ALLOW_ALL_ORIGINS", default=True))
